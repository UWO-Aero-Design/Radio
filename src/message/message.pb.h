/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _Message_Location {
    Message_Location_GROUND_STATION = 0,
    Message_Location_DRONE = 1
} Message_Location;

typedef enum _Message_Status {
    Message_Status_POWER_ON = 0,
    Message_Status_CALIBRATING = 1,
    Message_Status_READY = 2
} Message_Status;

/* Struct definitions */
typedef struct _orientation_ref_struct {
    float yaw;
    float pitch;
    float roll;
    float z;
} orientation_ref_struct;

typedef struct _position_ref_struct {
    float x;
    float y;
    float z;
    float yaw;
} position_ref_struct;

typedef struct _command_struct {
    uint32_t cmdType;
    bool has_orientReferenceCmd;
    orientation_ref_struct orientReferenceCmd;
    bool has_posReferenceCmd;
    position_ref_struct posReferenceCmd;
} command_struct;

typedef struct _Message {
    Message_Location sender;
    Message_Location recipient;
    int32_t packet_number;
    int64_t time;
    Message_Status status;
    bool has_commands;
    command_struct commands;
} Message;


/* Helper constants for enums */
#define _Message_Location_MIN Message_Location_GROUND_STATION
#define _Message_Location_MAX Message_Location_DRONE
#define _Message_Location_ARRAYSIZE ((Message_Location)(Message_Location_DRONE+1))

#define _Message_Status_MIN Message_Status_POWER_ON
#define _Message_Status_MAX Message_Status_READY
#define _Message_Status_ARRAYSIZE ((Message_Status)(Message_Status_READY+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Message_init_default                     {_Message_Location_MIN, _Message_Location_MIN, 0, 0, _Message_Status_MIN, false, command_struct_init_default}
#define command_struct_init_default              {0, false, orientation_ref_struct_init_default, false, position_ref_struct_init_default}
#define orientation_ref_struct_init_default      {0, 0, 0, 0}
#define position_ref_struct_init_default         {0, 0, 0, 0}
#define Message_init_zero                        {_Message_Location_MIN, _Message_Location_MIN, 0, 0, _Message_Status_MIN, false, command_struct_init_zero}
#define command_struct_init_zero                 {0, false, orientation_ref_struct_init_zero, false, position_ref_struct_init_zero}
#define orientation_ref_struct_init_zero         {0, 0, 0, 0}
#define position_ref_struct_init_zero            {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define orientation_ref_struct_yaw_tag           1
#define orientation_ref_struct_pitch_tag         2
#define orientation_ref_struct_roll_tag          3
#define orientation_ref_struct_z_tag             4
#define position_ref_struct_x_tag                1
#define position_ref_struct_y_tag                2
#define position_ref_struct_z_tag                3
#define position_ref_struct_yaw_tag              4
#define command_struct_cmdType_tag               1
#define command_struct_orientReferenceCmd_tag    2
#define command_struct_posReferenceCmd_tag       3
#define Message_sender_tag                       1
#define Message_recipient_tag                    2
#define Message_packet_number_tag                3
#define Message_time_tag                         4
#define Message_status_tag                       5
#define Message_commands_tag                     6

/* Struct field encoding specification for nanopb */
#define Message_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    sender,            1) \
X(a, STATIC,   SINGULAR, UENUM,    recipient,         2) \
X(a, STATIC,   SINGULAR, INT32,    packet_number,     3) \
X(a, STATIC,   SINGULAR, INT64,    time,              4) \
X(a, STATIC,   SINGULAR, UENUM,    status,            5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  commands,          6)
#define Message_CALLBACK NULL
#define Message_DEFAULT NULL
#define Message_commands_MSGTYPE command_struct

#define command_struct_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED32,  cmdType,           1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  orientReferenceCmd,   2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  posReferenceCmd,   3)
#define command_struct_CALLBACK NULL
#define command_struct_DEFAULT NULL
#define command_struct_orientReferenceCmd_MSGTYPE orientation_ref_struct
#define command_struct_posReferenceCmd_MSGTYPE position_ref_struct

#define orientation_ref_struct_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    yaw,               1) \
X(a, STATIC,   SINGULAR, FLOAT,    pitch,             2) \
X(a, STATIC,   SINGULAR, FLOAT,    roll,              3) \
X(a, STATIC,   SINGULAR, FLOAT,    z,                 4)
#define orientation_ref_struct_CALLBACK NULL
#define orientation_ref_struct_DEFAULT NULL

#define position_ref_struct_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    x,                 1) \
X(a, STATIC,   SINGULAR, FLOAT,    y,                 2) \
X(a, STATIC,   SINGULAR, FLOAT,    z,                 3) \
X(a, STATIC,   SINGULAR, FLOAT,    yaw,               4)
#define position_ref_struct_CALLBACK NULL
#define position_ref_struct_DEFAULT NULL

extern const pb_msgdesc_t Message_msg;
extern const pb_msgdesc_t command_struct_msg;
extern const pb_msgdesc_t orientation_ref_struct_msg;
extern const pb_msgdesc_t position_ref_struct_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Message_fields &Message_msg
#define command_struct_fields &command_struct_msg
#define orientation_ref_struct_fields &orientation_ref_struct_msg
#define position_ref_struct_fields &position_ref_struct_msg

/* Maximum encoded size of messages (where known) */
#define Message_size                             79
#define command_struct_size                      49
#define orientation_ref_struct_size              20
#define position_ref_struct_size                 20

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
